{"env_info": "sys.platform: darwin\nPython: 3.8.16 (default, Jan 17 2023, 16:42:09) [Clang 14.0.6 ]\nCUDA available: False\nGCC: Apple clang version 14.0.0 (clang-1400.0.29.202)\nPyTorch: 1.13.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 4.2\n  - C++ Version: 201402\n  - clang 14.0.0\n  - Intel(R) Math Kernel Library Version 2020.0.1 Product Build 20200208 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: NO AVX\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CXX_COMPILER=/Applications/Xcode_14.0.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -Wno-deprecated-declarations -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_PYTORCH_METAL_EXPORT -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -DUSE_COREML_DELEGATE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wvla-extension -Wno-range-loop-analysis -Wno-pass-failed -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -Wconstant-conversion -Wno-invalid-partial-specialization -Wno-typedef-redefinition -Wno-unused-private-field -Wno-inconsistent-missing-override -Wno-c++14-extensions -Wno-constexpr-not-const -Wno-missing-braces -Wunused-lambda-capture -Wunused-local-typedef -Qunused-arguments -fcolor-diagnostics -fdiagnostics-color=always -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -DUSE_MPS -fno-objc-arc -Wno-unguarded-availability-new -Wno-unused-private-field -Wno-missing-braces -Wno-c++14-extensions -Wno-constexpr-not-const, LAPACK_INFO=mkl, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=OFF, USE_CUDNN=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=ON, USE_OPENMP=OFF, USE_ROCM=OFF, \n\nTorchVision: 0.14.1\nOpenCV: 4.7.0\nMMCV: 1.7.0\nMMCV Compiler: clang 14.0.0\nMMCV CUDA Compiler: not available\nMMClassification: 0.25.0+3d4f80d", "seed": 859387372, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(\n        type='ResNet',\n        depth=18,\n        num_stages=4,\n        out_indices=(3, ),\n        style='pytorch'),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=512,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, )))\ndataset_type = 'ImageNet'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomResizedCrop', size=224),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', size=(256, -1)),\n    dict(type='CenterCrop', crop_size=224),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=2,\n    train=dict(\n        type='ImageNet',\n        data_prefix=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ],\n        ann_file=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/train.txt',\n        classes=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/classes.txt'\n    ),\n    val=dict(\n        type='ImageNet',\n        data_prefix=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/val',\n        ann_file=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ],\n        classes=\n        '/Users/xbkaishui/opensource/cv_hz/mmclassification/data/flower_dataset/classes.txt'\n    ),\n    test=dict(\n        type='ImageNet',\n        data_prefix='data/imagenet/val',\n        ann_file='data/imagenet/meta/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1)),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(interval=1, metric='accuracy')\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = '/Users/xbkaishui/opensource/cv_hz/mmclassification/checkpoints/resnet18_batch256_imagenet_20200708-34ab8f90.pth'\nresume_from = None\nworkflow = [('train', 1)]\noptimizer = dict(type='SGD', lr=0.001, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', step=[1])\nrunner = dict(type='EpochBasedRunner', max_epochs=100)\nwork_dir = 'work/resnet18_b32_flower_100'\ngpu_ids = [0]\ndevice = 'mps'\nseed = 859387372\n", "CLASSES": ["daisy", "rose", "tulip", "dandelion", "sunflower"]}
{"mode": "val", "epoch": 1, "iter": 18, "lr": 0.001, "accuracy_top-1": 33.04196, "accuracy_top-5": 86.88811}
{"mode": "val", "epoch": 2, "iter": 18, "lr": 0.0001, "accuracy_top-1": 34.96503, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 3, "iter": 18, "lr": 0.0001, "accuracy_top-1": 37.41259, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 4, "iter": 18, "lr": 0.0001, "accuracy_top-1": 40.90909, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 5, "iter": 18, "lr": 0.0001, "accuracy_top-1": 50.52448, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 6, "iter": 18, "lr": 0.0001, "accuracy_top-1": 54.72028, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 7, "iter": 18, "lr": 0.0001, "accuracy_top-1": 56.99301, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 8, "iter": 18, "lr": 0.0001, "accuracy_top-1": 60.83916, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 9, "iter": 18, "lr": 0.0001, "accuracy_top-1": 54.37063, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 10, "iter": 18, "lr": 0.0001, "accuracy_top-1": 59.96503, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 11, "iter": 18, "lr": 0.0001, "accuracy_top-1": 58.74126, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 12, "iter": 18, "lr": 0.0001, "accuracy_top-1": 61.36364, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 13, "iter": 18, "lr": 0.0001, "accuracy_top-1": 61.36364, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 14, "iter": 18, "lr": 0.0001, "accuracy_top-1": 62.06294, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 15, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.63636, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 16, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.63636, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 17, "iter": 18, "lr": 0.0001, "accuracy_top-1": 61.36364, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 18, "iter": 18, "lr": 0.0001, "accuracy_top-1": 62.76224, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 19, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.81119, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 20, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.63636, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 21, "iter": 18, "lr": 0.0001, "accuracy_top-1": 61.01399, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 22, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.98602, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 23, "iter": 18, "lr": 0.0001, "accuracy_top-1": 65.55944, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 24, "iter": 18, "lr": 0.0001, "accuracy_top-1": 63.63636, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 25, "iter": 18, "lr": 0.0001, "accuracy_top-1": 65.55944, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 26, "iter": 18, "lr": 0.0001, "accuracy_top-1": 64.33566, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 27, "iter": 18, "lr": 0.0001, "accuracy_top-1": 71.67832, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 28, "iter": 18, "lr": 0.0001, "accuracy_top-1": 68.18182, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 29, "iter": 18, "lr": 0.0001, "accuracy_top-1": 71.32867, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 30, "iter": 18, "lr": 0.0001, "accuracy_top-1": 70.45454, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 31, "iter": 18, "lr": 0.0001, "accuracy_top-1": 68.88112, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 32, "iter": 18, "lr": 0.0001, "accuracy_top-1": 69.75525, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 33, "iter": 18, "lr": 0.0001, "accuracy_top-1": 68.88112, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 34, "iter": 18, "lr": 0.0001, "accuracy_top-1": 70.45454, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 35, "iter": 18, "lr": 0.0001, "accuracy_top-1": 70.1049, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 36, "iter": 18, "lr": 0.0001, "accuracy_top-1": 75.17483, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 37, "iter": 18, "lr": 0.0001, "accuracy_top-1": 70.97902, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 38, "iter": 18, "lr": 0.0001, "accuracy_top-1": 74.12588, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 39, "iter": 18, "lr": 0.0001, "accuracy_top-1": 74.82517, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 40, "iter": 18, "lr": 0.0001, "accuracy_top-1": 73.07693, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 41, "iter": 18, "lr": 0.0001, "accuracy_top-1": 70.8042, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 42, "iter": 18, "lr": 0.0001, "accuracy_top-1": 75.52448, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 43, "iter": 18, "lr": 0.0001, "accuracy_top-1": 74.3007, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 44, "iter": 18, "lr": 0.0001, "accuracy_top-1": 68.88112, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 45, "iter": 18, "lr": 0.0001, "accuracy_top-1": 77.27273, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 46, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.84615, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 47, "iter": 18, "lr": 0.0001, "accuracy_top-1": 77.97203, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 48, "iter": 18, "lr": 0.0001, "accuracy_top-1": 75.17483, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 49, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.67133, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 50, "iter": 18, "lr": 0.0001, "accuracy_top-1": 76.04895, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 51, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.49651, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 52, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.06993, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 53, "iter": 18, "lr": 0.0001, "accuracy_top-1": 77.97203, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 54, "iter": 18, "lr": 0.0001, "accuracy_top-1": 72.02797, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 55, "iter": 18, "lr": 0.0001, "accuracy_top-1": 76.74825, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 56, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.06993, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 57, "iter": 18, "lr": 0.0001, "accuracy_top-1": 79.8951, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 58, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.94405, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 59, "iter": 18, "lr": 0.0001, "accuracy_top-1": 79.19581, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 60, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.49651, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 61, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.84615, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 62, "iter": 18, "lr": 0.0001, "accuracy_top-1": 74.82517, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 63, "iter": 18, "lr": 0.0001, "accuracy_top-1": 82.51749, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 64, "iter": 18, "lr": 0.0001, "accuracy_top-1": 79.19581, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 65, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.32168, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 66, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.06993, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 67, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.64336, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 68, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.09091, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 69, "iter": 18, "lr": 0.0001, "accuracy_top-1": 78.84615, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 70, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.41958, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 71, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.24476, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 72, "iter": 18, "lr": 0.0001, "accuracy_top-1": 85.31469, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 73, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.81818, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 74, "iter": 18, "lr": 0.0001, "accuracy_top-1": 82.51749, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 75, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.29371, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 76, "iter": 18, "lr": 0.0001, "accuracy_top-1": 83.56644, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 77, "iter": 18, "lr": 0.0001, "accuracy_top-1": 83.04196, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 78, "iter": 18, "lr": 0.0001, "accuracy_top-1": 79.8951, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 79, "iter": 18, "lr": 0.0001, "accuracy_top-1": 85.83916, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 80, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.79021, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 81, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.44056, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 82, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.46853, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 83, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.99301, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 84, "iter": 18, "lr": 0.0001, "accuracy_top-1": 80.41958, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 85, "iter": 18, "lr": 0.0001, "accuracy_top-1": 83.91608, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 86, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.09091, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 87, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.11888, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 88, "iter": 18, "lr": 0.0001, "accuracy_top-1": 82.34266, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 89, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.11888, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 90, "iter": 18, "lr": 0.0001, "accuracy_top-1": 82.86713, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 91, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.09091, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 92, "iter": 18, "lr": 0.0001, "accuracy_top-1": 83.91608, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 93, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.81818, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 94, "iter": 18, "lr": 0.0001, "accuracy_top-1": 85.13986, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 95, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.44056, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 96, "iter": 18, "lr": 0.0001, "accuracy_top-1": 84.61539, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 97, "iter": 18, "lr": 0.0001, "accuracy_top-1": 87.23776, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 98, "iter": 18, "lr": 0.0001, "accuracy_top-1": 81.64336, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 99, "iter": 18, "lr": 0.0001, "accuracy_top-1": 83.91608, "accuracy_top-5": 100.0}
{"mode": "val", "epoch": 100, "iter": 18, "lr": 0.0001, "accuracy_top-1": 88.81119, "accuracy_top-5": 100.0}
